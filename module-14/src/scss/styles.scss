body {
  font-family: "Roboto", sans-serif;
  background: #fff;
  font-size: 10px;
}

ul,
li {
  padding: 0;
  margin: 0;
}

.container {
  padding-top: 20px;
  width: 400px;
  min-width: 480px;
  margin: 0 auto;
}

.mdc-btn {
  min-width: 88px;
  height: 36px;
  padding: 0 16px;
  border: 0;
  outline: 0;
  border-radius: 2px;
  color: #fff;
  font-size: 14px;
  text-transform: uppercase;
  font-weight: 600;
  background-color: #00796b;
  cursor: pointer;
  box-shadow: 0 4px 4px 0 rgba(#414141, 0.3);

  &:hover {
    background-color: #004c40;
  }

  &:active {
    box-shadow: 0 6px 4px 0 rgba(#414141, 0.3);
  }
}

.search-form {
  display: flex;
  justify-content: center;
  padding: 20px;
  box-shadow: 0 0 2px 2px rgba(#414141, 0.2);
  margin-bottom: 15px;
}

.search-form input {
  margin-right: 12px;
  padding: 4px;
  outline: 0;
  border: 0;
  color: #263238;
  font-size: 18px;
  background-color: transparent;
  border-bottom: 2px solid #00796b;

  &::placeholder {
    color: #616161;
  }
}

img {
  width: 100%;
  display: block;
  height: 100%;
}

ul {
  list-style: none;
  width: 480px;
  display: flex;

  flex-wrap: wrap;
}

ul > li {
  position: relative;
  width: 150px;
  padding: 20px;
  min-height: 100px;
  box-shadow: 0 0 2px 2px rgb(204, 202, 202);

  &:not(:nth-child(3n)) {
    margin-right: 10px;
  }
}

.container {
  position: relative;
}
.show-error {
  display: block !important;
}
.error {
  position: absolute;
  display: none;
  width: 100px;
  min-height: 30px;
  background-color: rgb(247, 194, 194);
  box-shadow: 0 0 2px 2px rgb(207, 205, 205);
  font-size: 20px;
  top: 30px;
  left: -120px;
  font-size: 15px;
  padding: 5px;
  -webkit-animation: pulsing 2s alternate;
  animation: pulsing 1s alternate;
}

.img-container {
  width: 100%;
  height: 100px;
}

.remove {
  position: absolute;
  right: 0;
  top: 0;
}

.err-Container {
  position: relative;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

.show {
  display: none;
}

$boxesInRow: 3;
$boxSize: 20px;
$boxMrg: 6px;
$stepSize: $boxSize + $boxMrg;
$contSize: $boxSize * $boxesInRow + $boxMrg * ($boxesInRow - 1);

$animTime: 4s;

.banter-loader {
  position: absolute;
  left: 50%;
  top: 30%;
  width: $contSize;
  height: $contSize;
  margin-left: $contSize/-2;
  margin-top: $contSize/-2;

  &__box {
    float: left;
    position: relative;
    width: $boxSize;
    height: $boxSize;
    margin-right: $boxMrg;

    &:before {
      content: "";
      position: absolute;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      background: rgb(4, 7, 167);
    }

    &:nth-child(#{$boxesInRow}n) {
      margin-right: 0;
      margin-bottom: $boxMrg;
    }

    &:nth-child(1):before,
    &:nth-child(4):before {
      margin-left: $stepSize;
    }

    &:nth-child(3):before {
      margin-top: $stepSize * 2;
    }

    &:last-child {
      margin-bottom: 0;
    }
  }
}

$movement: (
  1: (
    "-x",
    "+x",
    "=0",
    "+x",
    "+y",
    "=0",
    "=0",
    "-y",
    "-x",
    "-x",
    "+x"
  ),
  2: (
    "=0",
    "+x",
    "-x",
    "+x",
    "+y",
    "=0",
    "=0",
    "=0",
    "-x",
    "=0",
    "-y"
  ),
  3: (
    "-x",
    "=0",
    "+x",
    "-x",
    "=0",
    "=0",
    "=0",
    "=0",
    "-y",
    "+x",
    "+y"
  ),
  4: (
    "-x",
    "=0",
    "-y",
    "+x",
    "+y",
    "-y",
    "=0",
    "=0",
    "-x",
    "+y",
    "+x"
  ),
  5: (
    "=0",
    "=0",
    "=0",
    "+x",
    "=0",
    "=0",
    "=0",
    "=0",
    "-y",
    "-x",
    "+y"
  ),
  6: (
    "=0",
    "-x",
    "=0",
    "+x",
    "=0",
    "=0",
    "=0",
    "+y",
    "-x",
    "-y",
    "+x"
  ),
  7: (
    "+x",
    "=0",
    "=0",
    "-x",
    "-y",
    "+x",
    "-x",
    "=0",
    "+y",
    "+x",
    "-x"
  ),
  8: (
    "=0",
    "-x",
    "-y",
    "+x",
    "=0",
    "=0",
    "=0",
    "=0",
    "+x",
    "+y",
    "-x"
  ),
  9: (
    "-x",
    "=0",
    "+x",
    "-x",
    "+x",
    "=0",
    "-x",
    "=0",
    "-x",
    "+x",
    "+x"
  )
);

@each $i, $dirArr in $movement {
  $xVal: 0;
  $yVal: 0;
  $n: 1;
  $len: length($dirArr);
  $step: percentage(1 / $len);

  @keyframes moveBox-#{$i} {
    @each $dir in $dirArr {
      @if ($dir == "-x") {
        $xVal: $xVal - $stepSize;
      }
      @if ($dir == "+x") {
        $xVal: $xVal + $stepSize;
      }
      @if ($dir == "-y") {
        $yVal: $yVal - $stepSize;
      }
      @if ($dir == "+y") {
        $yVal: $yVal + $stepSize;
      }

      #{$step * $n} {
        transform: translate($xVal, $yVal);
      }

      $n: $n + 1;
    }
  }

  .banter-loader__box:nth-child(#{$i}) {
    animation: moveBox-#{$i} $animTime infinite;
  }
}

@keyframes pulsing {
  0% {
    -webkit-transform: scale(0, 0);
    transform: scale(0, 0);
  }

  100% {
    -webkit-transform: scale(1, 1);
    transform: scale(1, 1);
  }
}
